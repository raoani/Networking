#!/usr/bin/env python

import subprocess
import argparse
import sys
import argparse

servers = [
'ec2-52-90-80-45.compute-1.amazonaws.com',
'ec2-54-183-23-203.us-west-1.compute.amazonaws.com',
'ec2-54-70-111-57.us-west-2.compute.amazonaws.com',
'ec2-52-215-87-82.eu-west-1.compute.amazonaws.com',
'ec2-52-28-249-79.eu-central-1.compute.amazonaws.com',
'ec2-54-169-10-54.ap-southeast-1.compute.amazonaws.com',
'ec2-52-62-198-57.ap-southeast-2.compute.amazonaws.com',
'ec2-52-192-64-163.ap-northeast-1.compute.amazonaws.com',
'ec2-54-233-152-60.sa-east-1.compute.amazonaws.com']



dnsserver = 'cs5700cdnproject.ccs.neu.edu'

parser_new = argparse.ArgumentParser() #argumnet parsing
parser_new.add_argument("-p", help = "provide a port number between 40000 - 65535 execept 65530" )
parser_new.add_argument("-o", help = "Origin server")
parser_new.add_argument("-n", help = "Domain Name server")
parser_new.add_argument("-u", help = "User Name of the User")
parser_new.add_argument("-i", help = "Private key file")
args = parser_new.parse_args()
 

if (int(args.p) < 40000) or (int(args.p) > 65535) or (int(args.p) == 65501) :   #checkingfor port number
	sys.exit("Please enter a valid port number")

if args.p is None :					#port number
	sys.exit("Invalid port Number")
if args.o is None :					#origin
	sys.exit("Invalid origin")
if args.n is None :					#name
	sys.exit("Invalid name")
if args.u is None :					#Uvername
	sys.exit("Invalid usename")
if args.i is None :					#ivalid key file
	sys.exit("Invalid Key File")

print ("Deploying DNS server")

cmnd = subprocess.check_output("scp -i " + args.i + " dnsserver " + args.u + "@" + dnsserver + ":~", shell = True)   #deploy to dns
cmnd1 = subprocess.check_output("ssh -i "+ args.i +" " + args.u + "@" + dnsserver +" 'chmod 755 ~/dnsserver'", shell=True) #permissionss


for i in servers :      #deploy to all servers and permission
	print("Copying to " + i )
	cmnd2 = subprocess.check_output("scp -i " + args.i + " httpserver " + args.u + "@" + i + ":~", shell = True)
	cmnd3 = subprocess.check_output("scp -i " + args.i + " scamp " + args.u + "@" + i + ":~", shell = True)
	cmnd4 = subprocess.check_output("ssh -i "+ args.i +" " + args.u + "@" + i +" 'chmod 755 ~/httpserver'", shell=True)
	cmnd4 = subprocess.check_output("ssh -i "+ args.i +" " + args.u + "@" + i +" 'chmod 755 ~/scamp'", shell=True)





